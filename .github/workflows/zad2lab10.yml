name: Zadanie 2A i 2B

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  dockerCI:
    runs-on: ubuntu-latest 
    outputs:
      wersja: ${{ steps.get_version.outputs.wersja }}
    steps:
    - name: Checkout Source repo
      uses: actions/checkout@v3
      with:
        repository: zomsik/source-repo 

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set variable with version for output
      id: get_version
      run: |
        wersja=$(sed -n 's/.*Wersja: \([^<]*\).*/\1/p' index.html)
        echo "::set-output name=wersja::$wersja"

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: zomsik/zadanie2:${{ steps.get_version.outputs.wersja }}

  kubernetesCI:
    needs: dockerCI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout config repo
      uses: actions/checkout@v4
      with:
        repository: zomsik/config-repo
        token: ${{ secrets.TOKEN_GITHUB }}
        ref: main

    - name: Update image references in Config repo
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        sed -i "s|image: zomsik/zadanie2:.*|image: zomsik/zadanie2:${{ needs.dockerCI.outputs.wersja }}|g" deployment.yaml
        if git diff --quiet; then
          echo "Brak zmian do zatwierdzenia."
        else
          git add deployment.yaml
          git commit -m "Aktualizacja wersji w deployment.yaml do wersji ${{ needs.dockerCI.outputs.wersja }} "
          git push origin main
        fi